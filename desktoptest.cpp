#include <iostream>
#include <fstream>

#define WAVEARR_LEN 256
#define SAMPLE_NUM 10000

using namespace std;



int main()
{
	ofstream soundfile;
	soundfile.open("soundfile.wav", ios::out | ios::binary);

	const uint8_t sin[] = { 0x80, 0x83, 0x86, 0x89, 0x8c, 0x8f, 0x92, 0x95,
	0x98,0x9b,0x9e,0xa2,0xa5,0xa7,0xaa,0xad,
	0xb0,0xb3,0xb6,0xb9,0xbc,0xbe,0xc1,0xc4,
	0xc6,0xc9,0xcb,0xce,0xd0,0xd3,0xd5,0xd7,
	0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,
	0xea,0xeb,0xed,0xee,0xf0,0xf1,0xf3,0xf4,
	0xf5,0xf6,0xf8,0xf9,0xfa,0xfa,0xfb,0xfc,
	0xfd,0xfd,0xfe,0xfe,0xfe,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xfe,0xfe,0xfe,0xfd,
	0xfd,0xfc,0xfb,0xfa,0xfa,0xf9,0xf8,0xf6,
	0xf5,0xf4,0xf3,0xf1,0xf0,0xee,0xed,0xeb,
	0xea,0xe8,0xe6,0xe4,0xe2,0xe0,0xde,0xdc,
	0xda,0xd7,0xd5,0xd3,0xd0,0xce,0xcb,0xc9,
	0xc6,0xc4,0xc1,0xbe,0xbc,0xb9,0xb6,0xb3,
	0xb0,0xad,0xaa,0xa7,0xa5,0xa2,0x9e,0x9b,
	0x98,0x95,0x92,0x8f,0x8c,0x89,0x86,0x83,
	0x80,0x7c,0x79,0x76,0x73,0x70,0x6d,0x6a,
	0x67,0x64,0x61,0x5d,0x5a,0x58,0x55,0x52,
	0x4f,0x4c,0x49,0x46,0x43,0x41,0x3e,0x3b,
	0x39,0x36,0x34,0x31,0x2f,0x2c,0x2a,0x28,
	0x25,0x23,0x21,0x1f,0x1d,0x1b,0x19,0x17,
	0x15,0x14,0x12,0x11,0xf,0xe,0xc,0xb,
	0xa,0x9,0x7,0x6,0x5,0x5,0x4,0x3,
	0x2,0x2,0x1,0x1,0x1,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x2,
	0x2,0x3,0x4,0x5,0x5,0x6,0x7,0x9,
	0xa,0xb,0xc,0xe,0xf,0x11,0x12,0x14,
	0x15,0x17,0x19,0x1b,0x1d,0x1f,0x21,0x23,
	0x25,0x28,0x2a,0x2c,0x2f,0x31,0x34,0x36,
	0x39,0x3b,0x3e,0x41,0x43,0x46,0x49,0x4c,
	0x4f,0x52,0x55,0x58,0x5a,0x5d,0x61,0x64,
	0x67,0x6a,0x6d,0x70,0x73,0x76,0x79,0x7c };

	const uint8_t tri[] = { 0x2,0x4,0x6,0x8,0xa,0xc,0xe,0x10,
	0x12,0x14,0x16,0x18,0x1a,0x1c,0x1e,0x20,
	0x22,0x24,0x26,0x28,0x2a,0x2c,0x2e,0x30,
	0x32,0x34,0x36,0x38,0x3a,0x3c,0x3e,0x40,
	0x42,0x44,0x46,0x48,0x4a,0x4c,0x4e,0x50,
	0x52,0x54,0x56,0x58,0x5a,0x5c,0x5e,0x60,
	0x62,0x64,0x66,0x68,0x6a,0x6c,0x6e,0x70,
	0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,0x80,
	0x81,0x83,0x85,0x87,0x89,0x8b,0x8d,0x8f,
	0x91,0x93,0x95,0x97,0x99,0x9b,0x9d,0x9f,
	0xa1,0xa3,0xa5,0xa7,0xa9,0xab,0xad,0xaf,
	0xb1,0xb3,0xb5,0xb7,0xb9,0xbb,0xbd,0xbf,
	0xc1,0xc3,0xc5,0xc7,0xc9,0xcb,0xcd,0xcf,
	0xd1,0xd3,0xd5,0xd7,0xd9,0xdb,0xdd,0xdf,
	0xe1,0xe3,0xe5,0xe7,0xe9,0xeb,0xed,0xef,
	0xf1,0xf3,0xf5,0xf7,0xf9,0xfb,0xfd,0xff,
	0xfd,0xfb,0xf9,0xf7,0xf5,0xf3,0xf1,0xef,
	0xed,0xeb,0xe9,0xe7,0xe5,0xe3,0xe1,0xdf,
	0xdd,0xdb,0xd9,0xd7,0xd5,0xd3,0xd1,0xcf,
	0xcd,0xcb,0xc9,0xc7,0xc5,0xc3,0xc1,0xbf,
	0xbd,0xbb,0xb9,0xb7,0xb5,0xb3,0xb1,0xaf,
	0xad,0xab,0xa9,0xa7,0xa5,0xa3,0xa1,0x9f,
	0x9d,0x9b,0x99,0x97,0x95,0x93,0x91,0x8f,
	0x8d,0x8b,0x89,0x87,0x85,0x83,0x81,0x80,
	0x7e,0x7c,0x7a,0x78,0x76,0x74,0x72,0x70,
	0x6e,0x6c,0x6a,0x68,0x66,0x64,0x62,0x60,
	0x5e,0x5c,0x5a,0x58,0x56,0x54,0x52,0x50,
	0x4e,0x4c,0x4a,0x48,0x46,0x44,0x42,0x40,
	0x3e,0x3c,0x3a,0x38,0x36,0x34,0x32,0x30,
	0x2e,0x2c,0x2a,0x28,0x26,0x24,0x22,0x20,
	0x1e,0x1c,0x1a,0x18,0x16,0x14,0x12,0x10,
	0xe,0xc,0xa,0x8,0x6,0x4,0x2,0x0	};

	char *wavearr = new char[WAVEARR_LEN * SAMPLE_NUM];
	for (int i = 0; i < SAMPLE_NUM; i++) {
		memcpy(wavearr + WAVEARR_LEN * i, tri, WAVEARR_LEN);
	}


	if (soundfile.is_open()) {
		soundfile.write(wavearr, WAVEARR_LEN * SAMPLE_NUM);
	}

	soundfile.close();
	delete[] wavearr;
}
